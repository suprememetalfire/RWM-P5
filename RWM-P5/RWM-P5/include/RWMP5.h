/*
-----------------------------------------------------------------------------
Filename:    RWMP5.h
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.7.x Application Wizard for VC10 (July 2011)
      http://code.google.com/p/ogreappwizards/
-----------------------------------------------------------------------------
*/
#ifndef __RWMP5_h_
#define __RWMP5_h_

#include "BaseApplication.h"
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#include "../res/resource.h"
#endif

class RWMP5 : public BaseApplication
{
public:
    RWMP5(void);
    virtual ~RWMP5(void);

protected:
    virtual void createScene(void);
	virtual bool frameRenderingQueued(const Ogre::FrameEvent& arg);
	virtual bool mouseMoved(const OIS::MouseEvent& arg);
	virtual bool mousePressed(const OIS::MouseEvent& arg, OIS::MouseButtonID id);
	virtual bool mouseReleased(const OIS::MouseEvent& arg, OIS::MouseButtonID id);
	virtual bool keyPressed( const OIS::KeyEvent &arg );

	void cleanAllBirds();
	void createBird(EntityType type);
	void updateBird(EntityType type,float timeSinceLastFrame);

	//for test only should be removed later
	hkpRigidBodyCinfo sphereInfo;
	hkpRigidBodyCinfo boxInfo;
	//The unique ID generator
	GameUtilities::UniqueIDGenerator * m_uniqueIDGenerator;
	//The level
	GameUtilities::Level* m_level;
	//The catapult
	GameEntities::Catapult* m_catapult;
	//The pointer to the currently loaded bird body
	GameEntities::BaseBirdObject* m_currentBirdBody;

	GameEntities::BomberBird* m_bomberBird;
	GameEntities::AssaultBird* m_assaultBird;
	GameEntities::GhostBird* m_ghostBird;
	GameEntities::MomBird* m_momBird;

	Ogre::RaySceneQuery *mRayScnQuery;// The ray scene query pointer
	bool m_mouseLeftDown;
	Ogre::Vector3 Mouse2DPos;

};

#endif // #ifndef __RWMP5_h_
